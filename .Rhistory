wellPanel(
h3("Filter Results"),
checkboxInput("isinstantbook", label = "Check for Instant Book only", value = FALSE),
#numericInput("pagenumber", label = "Page:", value = 1),
numericInput("guests", label = ("Number of Guests:"), value = 1),
selectInput("provider", label = ("Select a Provider"), choices = providers),
sliderInput("numofbathrooms", label = "Number of Bathrooms:", min = 1, max = 10, value = 1, step = 1),
sliderInput("numofbedrooms", label = "Number of Bedrooms:", min = 0, max = 10, value = 0, step = 1),
sliderInput("numofbeds", label = "Number of Beds:", min = 1, max = 10, value = 1, step = 1)
sliderInput("maxdistance", label = "Search Radius (Km):", min = 0.01, max = 200, value = 10, step = 5)
)
),
column(9,
leafletOutput('mymap', height = 700)
)
)
)
)
library(shiny)
library(plotly)
library(leaflet)
providers <- c("airbnb", "alwaysonvacation", "apartmentsapart",
"bedycasa", "bookingpal", "citiesreference",
"edomizil", "geronimo", "gloveler",
"holidayvelvet", "homeaway", "homestay",
"hostelworld", "housetrip", "interhome",
"nflats", "roomorama", "stopsleepgo",
"theotherhome", "travelmob", "vacationrentalpeople",
"vaycayhero", "waytostay", "webchalet", "zaranga")
# Define UI for application that draws a histogram
shinyUI(
fluidPage(
# Application title
titlePanel("Hello Shiny!"),
fluidRow(
column(3,
wellPanel(
textInput("city", "Enter a city:", value = 'Seattle'),
textInput("state", "Enter a state:", value = 'WA'),
actionButton("submit", "Submit")
),
wellPanel(
h3("Filter Results"),
checkboxInput("isinstantbook", label = "Check for Instant Book only", value = FALSE),
#numericInput("pagenumber", label = "Page:", value = 1),
numericInput("guests", label = ("Number of Guests:"), value = 1),
selectInput("provider", label = ("Select a Provider"), choices = providers),
sliderInput("numofbathrooms", label = "Number of Bathrooms:", min = 1, max = 10, value = 1, step = 1),
sliderInput("numofbedrooms", label = "Number of Bedrooms:", min = 0, max = 10, value = 0, step = 1),
sliderInput("numofbeds", label = "Number of Beds:", min = 1, max = 10, value = 1, step = 1),
sliderInput("maxdistance", label = "Search Radius (Km):", min = 0.01, max = 200, value = 10, step = 5)
)
),
column(9,
leafletOutput('mymap', height = 700)
)
)
)
)
shiny::runApp()
shiny::runApp()
library(plotly)
library(dplyr)
library(leaflet)
source('scripts/apiQuery.r')
build_map <- function(queryData) {
data <- get_data(queryData)
#View(data)
if(nrow(data) != 0) {
lat <- unlist(lapply(data$latLng, unlist))[seq(1, nrow(data)*2, 2)]
lng <- unlist(lapply(data$latLng, unlist))[seq(2, nrow(data)*2, 2)]
data$latitude = lat
data$longitude = lng
}
content <- paste(sep = "<br/>",
"<b><a href='http://www.samurainoodle.com'>Samurai Noodle</a></b>",
"606 5th Ave. S",
"Seattle, WA 98138"
)
latlng <- getLatLng(queryData$city, queryData$state)
cityLat <- latlng$lat
cityLng <- latlng$lon
if(nrow(data) != 0) {
map <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(data, lat = data$latitude, lng = data$longitude)
addPopups(data, lat = data$latitude, lng = data$lng, content,
options = popupOptions(closeButton = FALSE)
)
} else {
map <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(lng = cityLng, lat = cityLat, zoom = 12)
}
return(map)
}
shiny::runApp()
library(plotly)
library(dplyr)
library(leaflet)
source('scripts/apiQuery.r')
build_map <- function(queryData) {
data <- get_data(queryData)
#View(data)
if(nrow(data) != 0) {
lat <- unlist(lapply(data$latLng, unlist))[seq(1, nrow(data)*2, 2)]
lng <- unlist(lapply(data$latLng, unlist))[seq(2, nrow(data)*2, 2)]
data$latitude = lat
data$longitude = lng
}
content <- paste(sep = "<br/>",
"<b><a href='http://www.samurainoodle.com'>Samurai Noodle</a></b>",
"606 5th Ave. S",
"Seattle, WA 98138"
)
latlng <- getLatLng(queryData$city, queryData$state)
cityLat <- latlng$lat
cityLng <- latlng$lon
if(nrow(data) != 0) {
map <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(data, lat = data$latitude, lng = data$longitude)
leaflet() %>% addTiles() %>%
addPopups(-122.327298, 47.597131, content,
options = popupOptions(closeButton = FALSE)
)
} else {
map <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(lng = cityLng, lat = cityLat, zoom = 12)
}
return(map)
}
shiny::runApp()
library(plotly)
library(dplyr)
library(leaflet)
source('scripts/apiQuery.r')
build_map <- function(queryData) {
data <- get_data(queryData)
#View(data)
if(nrow(data) != 0) {
lat <- unlist(lapply(data$latLng, unlist))[seq(1, nrow(data)*2, 2)]
lng <- unlist(lapply(data$latLng, unlist))[seq(2, nrow(data)*2, 2)]
data$latitude = lat
data$longitude = lng
}
content <- paste(sep = "<br/>",
"<b><a href='http://www.samurainoodle.com'>Samurai Noodle</a></b>",
"606 5th Ave. S",
"Seattle, WA 98138"
)
latlng <- getLatLng(queryData$city, queryData$state)
cityLat <- latlng$lat
cityLng <- latlng$lon
if(nrow(data) != 0) {
map <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(data, lat = data$latitude, lng = data$longitude) %>%
addPopups(-122.327298, 47.597131, content,
options = popupOptions(closeButton = FALSE)
)
} else {
map <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(lng = cityLng, lat = cityLat, zoom = 12)
}
return(map)
}
shiny::runApp()
library(plotly)
library(dplyr)
library(leaflet)
source('scripts/apiQuery.r')
build_map <- function(queryData) {
data <- get_data(queryData)
#View(data)
if(nrow(data) != 0) {
lat <- unlist(lapply(data$latLng, unlist))[seq(1, nrow(data)*2, 2)]
lng <- unlist(lapply(data$latLng, unlist))[seq(2, nrow(data)*2, 2)]
data$latitude = lat
data$longitude = lng
}
content <- paste(sep = "<br/>",
"<b><a href='http://www.samurainoodle.com'>Samurai Noodle</a></b>",
"606 5th Ave. S",
"Seattle, WA 98138"
)
latlng <- getLatLng(queryData$city, queryData$state)
cityLat <- latlng$lat
cityLng <- latlng$lon
if(nrow(data) != 0) {
map <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(data, lat = data$latitude, lng = data$longitude) %>%
addPopups(-122.327298, 47.597131, content,
options = popupOptions(closeButton = TRUE)
)
} else {
map <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(lng = cityLng, lat = cityLat, zoom = 12)
}
return(map)
}
shiny::runApp()
library(plotly)
library(dplyr)
library(leaflet)
source('scripts/apiQuery.r')
build_map <- function(queryData) {
data <- get_data(queryData)
#View(data)
if(nrow(data) != 0) {
lat <- unlist(lapply(data$latLng, unlist))[seq(1, nrow(data)*2, 2)]
lng <- unlist(lapply(data$latLng, unlist))[seq(2, nrow(data)*2, 2)]
data$latitude = lat
data$longitude = lng
}
content <- paste(sep = "<br/>",
"<b><a href='http://www.samurainoodle.com'>Samurai Noodle</a></b>",
"606 5th Ave. S",
"Seattle, WA 98138"
)
latlng <- getLatLng(queryData$city, queryData$state)
cityLat <- latlng$lat
cityLng <- latlng$lon
if(nrow(data) != 0) {
map <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(data, lat = data$latitude, lng = data$longitude) %>%
addPopups(-122.327298, 47.597131, content)
} else {
map <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(lng = cityLng, lat = cityLat, zoom = 12)
}
return(map)
}
shiny::runApp()
library(plotly)
library(dplyr)
library(leaflet)
source('scripts/apiQuery.r')
build_map <- function(queryData) {
data <- get_data(queryData)
#View(data)
if(nrow(data) != 0) {
lat <- unlist(lapply(data$latLng, unlist))[seq(1, nrow(data)*2, 2)]
lng <- unlist(lapply(data$latLng, unlist))[seq(2, nrow(data)*2, 2)]
data$latitude = lat
data$longitude = lng
}
content <- paste(sep = "<br/>",
"<b><a href='http://www.samurainoodle.com'>Samurai Noodle</a></b>",
"606 5th Ave. S",
"Seattle, WA 98138"
)
latlng <- getLatLng(queryData$city, queryData$state)
cityLat <- latlng$lat
cityLng <- latlng$lon
if(nrow(data) != 0) {
map <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(data, lat = data$latitude, lng = data$longitude) %>%
addPopups(data, lat = data$latitude, lng = data$longitude, content)
} else {
map <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(lng = cityLng, lat = cityLat, zoom = 12)
}
return(map)
}
shiny::runApp()
library(plotly)
library(dplyr)
library(leaflet)
source('scripts/apiQuery.r')
build_map <- function(queryData) {
data <- get_data(queryData)
#View(data)
if(nrow(data) != 0) {
lat <- unlist(lapply(data$latLng, unlist))[seq(1, nrow(data)*2, 2)]
lng <- unlist(lapply(data$latLng, unlist))[seq(2, nrow(data)*2, 2)]
data$latitude = lat
data$longitude = lng
}
content <- paste(sep = "<br/>",
"<b><a href='http://www.samurainoodle.com'>Samurai Noodle</a></b>",
"606 5th Ave. S",
"Seattle, WA 98138"
)
latlng <- getLatLng(queryData$city, queryData$state)
cityLat <- latlng$lat
cityLng <- latlng$lon
if(nrow(data) != 0) {
map <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(data, lat = data$latitude, lng = data$longitude) %>%
addPopups(data$longitude, data$latitude, content)
} else {
map <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(lng = cityLng, lat = cityLat, zoom = 12)
}
return(map)
}
shiny::runApp()
library(plotly)
library(dplyr)
library(leaflet)
source('scripts/apiQuery.r')
build_map <- function(queryData) {
data <- get_data(queryData)
#View(data)
if(nrow(data) != 0) {
lat <- unlist(lapply(data$latLng, unlist))[seq(1, nrow(data)*2, 2)]
lng <- unlist(lapply(data$latLng, unlist))[seq(2, nrow(data)*2, 2)]
data$latitude = lat
data$longitude = lng
}
content <- paste(sep = "<br/>",
"<b><a href='http://www.samurainoodle.com'>Samurai Noodle</a></b>",
"606 5th Ave. S",
"Seattle, WA 98138"
)
latlng <- getLatLng(queryData$city, queryData$state)
cityLat <- latlng$lat
cityLng <- latlng$lon
if(nrow(data) != 0) {
map <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(data, lat = data$latitude, lng = data$longitude, clickOpts(addPopups(addPopups(data$longitude, data$latitude, content))))
} else {
map <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(lng = cityLng, lat = cityLat, zoom = 12)
}
return(map)
}
shiny::runApp()
library(plotly)
library(dplyr)
library(leaflet)
source('scripts/apiQuery.r')
build_map <- function(queryData) {
data <- get_data(queryData)
#View(data)
if(nrow(data) != 0) {
lat <- unlist(lapply(data$latLng, unlist))[seq(1, nrow(data)*2, 2)]
lng <- unlist(lapply(data$latLng, unlist))[seq(2, nrow(data)*2, 2)]
data$latitude = lat
data$longitude = lng
}
content <- paste(sep = "<br/>",
"<b><a href='http://www.samurainoodle.com'>Samurai Noodle</a></b>",
"606 5th Ave. S",
"Seattle, WA 98138"
)
latlng <- getLatLng(queryData$city, queryData$state)
cityLat <- latlng$lat
cityLng <- latlng$lon
if(nrow(data) != 0) {
map <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(data, lat = data$latitude, lng = data$longitude, clickOpts(addPopups(data$longitude, data$latitude, content)))
} else {
map <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(lng = cityLng, lat = cityLat, zoom = 12)
}
return(map)
}
shiny::runApp()
library(plotly)
library(dplyr)
library(leaflet)
source('scripts/apiQuery.r')
build_map <- function(queryData) {
data <- get_data(queryData)
#View(data)
if(nrow(data) != 0) {
lat <- unlist(lapply(data$latLng, unlist))[seq(1, nrow(data)*2, 2)]
lng <- unlist(lapply(data$latLng, unlist))[seq(2, nrow(data)*2, 2)]
data$latitude = lat
data$longitude = lng
}
content <- paste(sep = "<br/>",
"<b><a href='http://www.samurainoodle.com'>Samurai Noodle</a></b>",
"606 5th Ave. S",
"Seattle, WA 98138"
)
latlng <- getLatLng(queryData$city, queryData$state)
cityLat <- latlng$lat
cityLng <- latlng$lon
if(nrow(data) != 0) {
map <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(data, lat = data$latitude, lng = data$longitude, clickOpts(
addPopups(content)
)
)
} else {
map <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(lng = cityLng, lat = cityLat, zoom = 12)
}
return(map)
}
shiny::runApp()
library(plotly)
library(dplyr)
library(leaflet)
source('scripts/apiQuery.r')
build_map <- function(queryData) {
data <- get_data(queryData)
#View(data)
if(nrow(data) != 0) {
lat <- unlist(lapply(data$latLng, unlist))[seq(1, nrow(data)*2, 2)]
lng <- unlist(lapply(data$latLng, unlist))[seq(2, nrow(data)*2, 2)]
data$latitude = lat
data$longitude = lng
}
content <- paste(sep = "<br/>",
"<b><a href='http://www.samurainoodle.com'>Samurai Noodle</a></b>",
"606 5th Ave. S",
"Seattle, WA 98138"
)
latlng <- getLatLng(queryData$city, queryData$state)
cityLat <- latlng$lat
cityLng <- latlng$lon
if(nrow(data) != 0) {
map <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(data, lat = data$latitude, lng = data$longitude) %>%
addPopups(data = data, lat = data$latitude, lng = data$longitude, options = popupOptions(closeButton = TRUE))
} else {
map <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(lng = cityLng, lat = cityLat, zoom = 12)
}
return(map)
}
shiny::runApp()
library(plotly)
library(dplyr)
library(leaflet)
source('scripts/apiQuery.r')
build_map <- function(queryData) {
data <- get_data(queryData)
#View(data)
if(nrow(data) != 0) {
lat <- unlist(lapply(data$latLng, unlist))[seq(1, nrow(data)*2, 2)]
lng <- unlist(lapply(data$latLng, unlist))[seq(2, nrow(data)*2, 2)]
data$latitude = lat
data$longitude = lng
}
content <- paste(sep = "<br/>",
"<b><a href='http://www.samurainoodle.com'>Samurai Noodle</a></b>",
"606 5th Ave. S",
"Seattle, WA 98138"
)
latlng <- getLatLng(queryData$city, queryData$state)
cityLat <- latlng$lat
cityLng <- latlng$lon
if(nrow(data) != 0) {
map <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(data, lat = data$latitude, lng = data$longitude) %>%
addPopups(data, lat = data$latitude, lng = data$longitude, popupOptions(closeButton = TRUE), content)
} else {
map <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(lng = cityLng, lat = cityLat, zoom = 12)
}
return(map)
}
shiny::runApp()
library(plotly)
library(dplyr)
library(leaflet)
source('scripts/apiQuery.r')
build_map <- function(queryData) {
data <- get_data(queryData)
#View(data)
if(nrow(data) != 0) {
lat <- unlist(lapply(data$latLng, unlist))[seq(1, nrow(data)*2, 2)]
lng <- unlist(lapply(data$latLng, unlist))[seq(2, nrow(data)*2, 2)]
data$latitude = lat
data$longitude = lng
}
content <- paste(sep = "<br/>",
"<b><a href='http://www.samurainoodle.com'>Samurai Noodle</a></b>",
"606 5th Ave. S",
"Seattle, WA 98138"
)
latlng <- getLatLng(queryData$city, queryData$state)
cityLat <- latlng$lat
cityLng <- latlng$lon
if(nrow(data) != 0) {
map <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(data, lat = data$latitude, lng = data$longitude) %>%
addPopups(data, lat = data$latitude, lng = data$longitude, content)
} else {
map <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(lng = cityLng, lat = cityLat, zoom = 12)
}
return(map)
}
shiny::runApp()
